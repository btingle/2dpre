#!/bin/bash
BINDIR=$(dirname $0)
BINDIR=${BINDIR-.}

bash $BINDIR/diagnose_2d01.bash | grep -v "good" | awk '{print $2}' > /dev/shm/partitions_to_fix.txt
bash $BINDIR/diagnose_2d01.bash | grep "good" | awk '{print $2}' > /dev/shm/partitions_to_postgres.txt

if ! [[ $BINDIR == /* ]]; then
	BINDIR=$PWD/$BINDIR
fi
export BINDIR

rm /dev/shm/prejobinfo.txt
rm /dev/shm/prejoblist.txt

log_base_dir=/nfs/exb/zinc22/2dload_logs
results_base_dir=/nfs/exb/zinc22/2dpre_results

slurmhost=$(hostname | cut -d'.' -f1)
nprejobs=0
for partid in $(cat /dev/shm/partitions_to_fix.txt); do

	partname=$(cat $BINDIR/partitions.txt | grep -w $partid | awk '{print $1 "_" $2}')
	#echo $partid
	logdir=$log_base_dir/$partid
	mkdir -p $logdir

	pre_jobids=""
	start=$nprejobs
	for catalog in s m su mu; do
		tranches=$(cat $BINDIR/tranches.txt | grep -w $catalog | awk '{print $1}')
		prefile=$results_base_dir/$catalog/$partid.pre
		if [ -f $prefile ]; then
			ntranches=$(tar tf $prefile | wc -l)
			pstart=$(printf $partname | cut -d'_' -f1)
			pend=$(printf $partname | cut -d'_' -f2)
			nactual=$(python get_partition_tranche_files.py $tranches $pstart $pend | wc -l)
			npresent=$(python get_partition_tranche_files.py $tranches $pstart $pend | grep -v MISSING | wc -l)
			echo $ntranches $nactual $npresent
			if [ $ntraches -eq $nactual ]; then
				continue
			fi
			nprejobs=$((nprejobs+1))
			echo $partid $tranches $catalog >> /dev/shm/prejoblist.txt
		fi
	done
	echo $((start+1)) $nprejobs $partname >> /dev/shm/prejobinfo.txt

done

exit

SRUN_ARGS="--parsable --priority=TOP -w $slurmhost -J runpre"

runpre_max_parallel=8
mkdir -p $log_base_dir/runpre_$slurmhost
prebatchid=$(sbatch $SRUN_ARGS -o $log_base_dir/runpre_$slurmhost/%a.out --array=1-$nprejobs%$runpre_max_parallel $BINDIR/runpre_wrapper_slurm.bash)
echo "submitted $nprejobs runpre jobs"

for partid in $(cat /dev/shm/partitions_to_fix.txt); do

	logdir=$log_base_dir/$partid
	partname=$(cat $BINDIR/partitions.txt | grep -w $partid | awk '{print $1 "_" $2}')
	initid=$(sbatch --parsable --priority=TOP -w $slurmhost -J 2dinit -o $logdir/2d01_init_$partid.out $BINDIR/init_2d01_slurm.bash $partid)
	echo "init job id for $partid : $initid"

	pre_jobids=""
	prejobs=$(grep -w $partname /dev/shm/prejobinfo.txt | awk '{print $1 "," $2}')
	prejobstart=$(printf $prejobs | cut -d',' -f1)
	prejobend=$(printf $prejobs   | cut -d',' -f2)
	echo $prejobstart $prejobend
	for i in $(seq $prejobstart $prejobend); do
		pre_jobids="$pre_jobids${prebatchid}_$i:"
	done

	# lop off the extra semicolon from the job ids list
	#chars=$(printf "$pre_jobids" | wc -c)
	#pre_jobids=$(printf "$pre_jobids" | awk -v cnt=$((chars-1)) '{print substr($0, 1, cnt)}')

	SRUN_ARGS="--parsable --priority=TOP -w $slurmhost -J 2dadd"
	
	echo "dependency: $pre_jobids"
	jobid=$(sbatch $SRUN_ARGS -d afterok:$pre_jobids$initid -o $logdir/2d01_load_${partid}_s.out $BINDIR/load_2d_wrapper_slurm.bash add $partid /nfs/exb/zinc22/2dpre_results/s/$partid.pre s)
	echo "submitted load job: $jobid"
	for catalog in m su mu; do
		jobid=$(sbatch $SRUN_ARGS -d afterok:$jobid -o $logdir/2d01_load_${partid}_$catalog.out $BINDIR/load_2d_wrapper_slurm.bash add $partid /nfs/exb/zinc22/2dpre_results/$catalog/$partid.pre $catalog)
		echo "submitted load job: $jobid"
	done
done
